<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">
	<resultMap type="MemberManageView" id="memberViewResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
		
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberPhone" column="MEMBER_PHONE"/>
		<result property="point" column="POINT"/>
		<result property="sanctions" column="SANCTIONS"/>
		<result property="dCount" column="DCOUNT"/>
		<result property="totalCount" column="TOTALCOUNT"/>
	</resultMap>
	
	<resultMap type="MentoManageView" id="mentoViewResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
		
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="mentorNo" column="MENTOR_NO"/>
		<result property="mentorPass" column="MENTOR_PASS"/>
		<result property="specName" column="SPEC_NAME"/>
		<result property="specFileName" column="SPEC_FILENAME"/>
		<result property="specCName" column="SPEC_C_NAME"/>
		<result property="specComfirm" column="SPEC_CONFIRM"/>
	</resultMap>
	
	<resultMap type="GroomingManageView" id="groomingViewResultSet">
		<id property="groomingNo" column="GROOMING_NO"/>
		
		<result property="groomingType" column="GROOMING_TYPE"/>
		<result property="groomingTitle" column="GROOMING_TITLE"/>
		<result property="groomingIntroduce" column="GROOMING_INTRODUCE"/>
		<result property="groomingParticipants" column="GROOMING_PARTICIPANTS"/>
		<result property="groomingCurrentPeople" column="GROOMING_CURRENT_PEOPLE"/>
		<result property="gCalendarEndDate" column="G_CALENDAR_END_DATE"/>
		<result property="gBoardCreateDate" column="G_BOARD_CREATE_DATE"/>
		<result property="groomingStatus" column="GROOMING_STATUS"/>
	</resultMap>
	
	<resultMap type="DeclarationManageView" id="declarationViewResultSet">
		<id property="declarationNo" column="DECLARATION_NO"/>
		
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="declarationCNo" column="DECLARATION_C_NO"/>
		<result property="declarationNNo" column="DECLARATION_N_NO"/>
		<result property="declarationContent" column="DECLARATION_CONTENT"/>
		<result property="declarationCheck" column="DECLARATION_CHECK"/>
	</resultMap>
	
	<resultMap type="GraphListCount" id="graphCountResultView">
		<id property="lastDay" column="LASTDAY"/>
		
		<result property="count" column="LIST_COUNT"/>
	</resultMap>

	<select id="memberListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER_MANAGE
		<where>
			<if test="category == 'nickname'">
				MEMBER_NICKNAME LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'memberName'">
				MEMBER_NAME LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'email'">
				MEMBER_EMAIL LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'sanctions'">
				SANCTIONS IS NOT NULL
			</if>
		</where>
	</select>
	
	<select id="memberList" parameterType="string" resultMap="memberViewResultSet">
		SELECT *
		FROM MEMBER_MANAGE
		<where>
			<if test="category == 'nickname'">
				MEMBER_NICKNAME LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'memberName'">
				MEMBER_NAME LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'email'">
				MEMBER_EMAIL LIKE '%'||#{name}||'%'
			</if>
			<if test="category == 'sanctions'">
				SANCTIONS IS NOT NULL
			</if>
		</where>
	</select>
	
	<select id="nowPoint" parameterType="Point" resultType="_int">
		SELECT SUM(ADD_POINT)
		FROM POINT
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<insert id="pointCalculation" parameterType="Point">
		INSERT INTO POINT
		VALUES(SEQ_POINT_NO.NEXTVAL
			 , #{memberNo}
			 , #{addPoint}
			 , 0
			 , #{pointList}
			 , SYSDATE
		)
	</insert>
	
	<select id="selectNo" parameterType="map" resultMap="memberViewResultSet">
		SELECT M.MEMBER_NO, M.MEMBER_EMAIL, M.MEMBER_NICKNAME, M.MEMBER_NAME, NVL(SANCTIONS,0) sanctions
		FROM MEMBER_MANAGE M
		RIGHT JOIN MENTOR T ON (M.MEMBER_NO = T.MEMBER_NO)
		<where>
			<if test="kind == 1">
				T.MENTOR_PASS = 'Y'
			</if>
			<if test="kind == 2">
				T.MENTOR_PASS = 'C'
			</if>
		</where>
	</select>
	
	<select id="selectmentoCount" parameterType="map" resultType="_int">
		SELECT COUNT(MEMBER_NO)
		FROM MENTOR
		<where>
			<if test="kind == 1">
				MENTOR_PASS = 'Y'
			</if>
			<if test="kind == 2">
				MENTOR_PASS = 'C'
			</if>
		</where>
	</select>
	
	<select id="selectmentoList" parameterType="java.util.List" resultMap="mentoViewResultSet">
		SELECT *
		FROM METO_MANAGE
		WHERE MENTOR_PASS = 'Y'
		<foreach item="mNo" index="index" collection="list"
				open="AND (" separator="OR" close=")">
				<if test="mNo.memberNo != null">
					MEMBER_NO = #{mNo.memberNo} 
				</if>
		</foreach>
		ORDER BY SPEC_C_NAME DESC
	</select>
	
	<select id="selectSpareMentoList" parameterType="java.util.List" resultMap="mentoViewResultSet">
		SELECT * 
		FROM METO_MANAGE
		WHERE MENTOR_PASS = 'C'
		<foreach item="sNo" index="index" collection="list"
				open="AND (" separator="OR" close=")">
				<if test="sNo.memberNo != null">
					MEMBER_NO = #{sNo.memberNo} 
				</if>
		</foreach>
		ORDER BY SPEC_C_NAME DESC
	</select>
	
	<select id="selectGroomingCount" parameterType="Map" resultType="_int">
		SELECT COUNT(DISTINCT G.GROOMING_NO)
		FROM GROOMING G
		LEFT JOIN GROMMING_MEMBER GM ON (G.GROOMING_NO=GM.GROOMING_NO)
		LEFT JOIN GROOMING_CALENDAR GC ON (G.GROOMING_NO=GC.GROOMING_NO)
		LEFT JOIN GBOARD GB ON (GM.G_MEMBER_NO=GB.GROOMING_MEMBER_NO)
		WHERE (GROOMING_STATUS = 'Y' OR GROOMING_STATUS = 'B')
		AND STUDY_END_DATE > SYSDATE
		<if test="day != null and day != ''">
	<![CDATA[
			AND GB.G_BOARD_CREATE_DATE < SYSDATE -#{day}
			AND GC.G_CALENDAR_END_DATE < SYSDATE -#{day}			
	]]>
		</if>
		<if test="category != null and category != 'null' and category != ''">
			AND G.GROOMING_TYPE = #{category}
		</if>
		<if test="groomingName != null and groomingName != ''">
	        AND GROOMING_TITLE LIKE '%'||#{groomingName}||'%'
		</if>
		ORDER BY G_BOARD_CREATE_DATE ASC, G_CALENDAR_END_DATE ASC
	</select>
	
	<select id="selectGroomingList" parameterType="Map" resultMap="groomingViewResultSet">
		SELECT G.GROOMING_NO,G.GROOMING_TYPE,G.GROOMING_TITLE,G.GROOMING_INTRODUCE,G.GROOMING_PARTICIPANTS,G.GROOMING_CURRENT_PEOPLE,NVL(MAX(GB.G_BOARD_CREATE_DATE),G.GROOMING_CREATE_DATE) G_BOARD_CREATE_DATE,NVL(MAX(GC.G_CALENDAR_END_DATE),G.GROOMING_CREATE_DATE) G_CALENDAR_END_DATE, G.GROOMING_STATUS
		FROM GROOMING G
		LEFT JOIN GROMMING_MEMBER GM ON (G.GROOMING_NO=GM.GROOMING_NO)
		LEFT JOIN GROOMING_CALENDAR GC ON (G.GROOMING_NO=GC.GROOMING_NO)
		LEFT JOIN GBOARD GB ON (GM.G_MEMBER_NO=GB.GROOMING_MEMBER_NO)
		WHERE (GROOMING_STATUS = 'Y' OR GROOMING_STATUS = 'B')
		AND STUDY_END_DATE > SYSDATE
		<if test="day != null and day != ''">
	<![CDATA[
			AND GB.G_BOARD_CREATE_DATE < SYSDATE -#{day}
			AND GC.G_CALENDAR_END_DATE < SYSDATE -#{day}			
	]]>
		</if>
		<if test="category != null and category != 'null' and category != ''">
			AND G.GROOMING_TYPE = #{category}
		</if>
		<if test="groomingName != null and groomingName != ''">
	        AND GROOMING_TITLE LIKE '%'||#{groomingName}||'%'
		</if>
		GROUP BY G.GROOMING_NO, G.GROOMING_TYPE, G.GROOMING_TITLE, G.GROOMING_INTRODUCE, G.GROOMING_PARTICIPANTS, G.GROOMING_CURRENT_PEOPLE, G.GROOMING_CREATE_DATE, G.GROOMING_STATUS	
		ORDER BY G_BOARD_CREATE_DATE ASC, G_CALENDAR_END_DATE ASC
	</select>
	
	<update id="gActivation" parameterType="string">
		UPDATE GROOMING
		SET GROOMING_STATUS = #{gActivation}
		WHERE GROOMING_NO = #{groomingNo}
	</update>
	
	<select id="selectDeclarationMember" parameterType="java.util.List" resultMap="memberViewResultSet">
		SELECT DISTINCT M.MEMBER_NO, M.MEMBER_EMAIL, M.MEMBER_NICKNAME, M.MEMBER_NAME, M.POINT, COUNT(D.DECLARATION_N_NO)
		FROM MEMBER_MANAGE M
		JOIN DECLARATION D ON(M.MEMBER_NO=D.DECLARATION_N_NO)
		WHERE D.DECLARATION_CHECK = 'N'
			<foreach item="dMemberList" index="index" collection="list"
					open="AND (" separator="OR" close=")">
					<if test="dMemberList.memberNo != null">
						D.DECLARATION_N_NO = #{dMemberList.memberNo} 
					</if>
			</foreach>
		GROUP BY M.MEMBER_NO, M.MEMBER_EMAIL, M.MEMBER_NICKNAME, M.MEMBER_NAME, M.POINT
		ORDER BY COUNT(D.DECLARATION_N_NO) DESC
	</select>
	
	<select id="selectDMemberCount" resultMap="memberViewResultSet">
		SELECT DISTINCT DECLARATION_N_NO AS MEMBER_NO
		FROM DECLARATION
		WHERE DECLARATION_CHECK = 'N'
	</select>
	
	<select id="selectDeclarationCount" resultType="_int">
		SELECT COUNT(DISTINCT DECLARATION_N_NO)
		FROM DECLARATION
		WHERE DECLARATION_CHECK = 'N'
	</select>
	
	<select id="selectDeclarationList" resultMap="declarationViewResultSet">
		SELECT *
		FROM DECLARATION
		WHERE DECLARATION_CHECK = 'N'
		<foreach item="dMemberList" index="index" collection="list"
				open="AND (" separator="OR" close=")">
				<if test="dMemberList.memberNo != null">
					DECLARATION_N_NO = #{dMemberList.memberNo} 
				</if>
		</foreach>
	</select>
	
	<update id="declarationDelete" parameterType="Map">
		UPDATE DECLARATION
		SET DECLARATION_CHECK = 'Y'
		WHERE DECLARATION_N_NO = #{memberNo}
	</update>
	
	<select id="selectTotalCount" parameterType="java.util.List" resultMap="memberViewResultSet">
		SELECT DECLARATION_N_NO MEMBER_NO, COUNT(DECLARATION_N_NO) AS TOTALCOUNT
		FROM DECLARATION
		<where>
			<foreach item="dMemberList" index="index" collection="list"
					open="(" separator="OR" close=")">
					<if test="dMemberList.memberNo != null">
						DECLARATION_N_NO = #{dMemberList.memberNo} 
					</if>
			</foreach>
		</where>
		GROUP BY DECLARATION_N_NO
	</select>
	
	<select id="selectDCount" parameterType="java.util.List" resultMap="memberViewResultSet">
		SELECT DECLARATION_N_NO MEMBER_NO, COUNT(DECLARATION_N_NO) AS DCOUNT
		FROM DECLARATION
		WHERE DECLARATION_CHECK = 'N'
			<foreach item="dMemberList" index="index" collection="list"
					open="AND (" separator="OR" close=")">
					<if test="dMemberList.memberNo != null">
						DECLARATION_N_NO = #{dMemberList.memberNo} 
					</if>
			</foreach>
		GROUP BY DECLARATION_N_NO
	</select>
	
	<update id="cafeInfoChange" parameterType="CafeInfo">
		UPDATE STUDYCAFE
		SET CAFE_NAME = #{cafeName}
			,CAFE_CONTENT = #{cafeContent}
			,CAFE_PHONE = #{cafePhone}
			,CAFE_ADDRESS = #{cafeAddress}
			,CAFE_IMG = #{cafeImg}
		WHERE CAFE_NO = #{cafeNo}
	</update>
	
	<update id="cafePriceInfoChange" parameterType="CafeInfo">
		UPDATE CAFEPRICE
		SET C_ROOM_NAME = #{cRoomName}
			,C_ROOM_AVAILABLE_TIME = #{cRoomAvailableTime}
			,C_ROOM_TIME = #{cRoomTime}
			,C_ROOM_PRICE = #{cRoomPrice}
			,C_ROOM_HEAD_COUNT = #{cRoomHeadCount}
		WHERE C_PRICE_NO = #{cPriceNo}
	</update>
	
	<insert id="insertCafeInfo" parameterType="CafeInfo">
		MERGE INTO STUDYCAFE
		USING DUAL
		ON (CAFE_NAME = #{cafeName}
		  AND CAFE_CONTENT = #{cafeContent}
		  AND CAFE_PHONE = #{cafePhone}
		  AND CAFE_ADDRESS = #{cafeAddress})
		WHEN NOT MATCHED THEN
		INSERT (CAFE_NO
		  ,CAFE_NAME
		  ,CAFE_CONTENT
		  ,CAFE_PHONE
		  ,CAFE_ADDRESS
		  ,CAFE_IMG
		  ,CAFE_MAP_Y
		  ,CAFE_MAP_X)
		VALUES (SEQ_CAFE_NO.NEXTVAL
			  , #{cafeName}
			  , #{cafeContent}
			  , #{cafePhone}
			  , #{cafeAddress}
			  , #{cafeImg}
			  , NULL
			  , NULL)

	</insert>
	
	<select id="selectCafeNo" parameterType="CafeInfo" resultType="string">
		SELECT DISTINCT CAFE_NO
		FROM STUDYCAFE
		WHERE CAFE_NAME = #{cafeName} AND CAFE_CONTENT = #{cafeContent} AND CAFE_PHONE = #{cafePhone} AND CAFE_ADDRESS = #{cafeAddress}
	</select>
	
	<insert id="insertCafePriceInfo" parameterType="CafeInfo">
		INSERT INTO CAFEPRICE
		VALUES (SEQ_C_PRICE_NO.NEXTVAL, #{cafeNo}, #{cRoomName}, #{cRoomAvailableTime}, #{cRoomTime}, #{cRoomPrice}, #{cRoomHeadCount})
	</insert>
	
	<select id="adminBoardList" parameterType="java.util.List" resultType="GraphListCount">
		<![CDATA[
			SELECT LASTDAY lastDay, COUNT(BOARD_CREATE_DATE) count
			FROM (SELECT TO_CHAR(TO_DATE(SYSDATE-9, 'YY-MM-DD') + ROWNUM - 1, 'YYYY-MM-DD') AS LASTDAY
					FROM ALL_OBJECTS
					WHERE ROWNUM <= 10)
			LEFT JOIN BOARD ON (BOARD_CREATE_DATE=LASTDAY)
			GROUP BY LASTDAY
			ORDER BY 1 ASC
		]]>
	</select>
	
	<select id="adminGroomingList" parameterType="java.util.List" resultType="GraphListCount">
		<![CDATA[
			SELECT LASTDAY lastDay, COUNT(GROOMING_CREATE_DATE) count
			FROM (SELECT TO_CHAR(TO_DATE(SYSDATE-9, 'YY-MM-DD') + ROWNUM - 1, 'YYYY-MM-DD') AS LASTDAY
					FROM ALL_OBJECTS
					WHERE ROWNUM <= 10)
			LEFT JOIN GROOMING ON (GROOMING_CREATE_DATE=LASTDAY)
			GROUP BY LASTDAY
			ORDER BY 1 ASC
		]]>
	</select>
	
	<select id="adminMemberList" parameterType="java.util.List" resultType="GraphListCount">
		<![CDATA[
			SELECT LASTDAY lastDay, COUNT(MEMBER_JOIN_DATE) count
			FROM (SELECT TO_CHAR(TO_DATE(SYSDATE-9, 'YY-MM-DD') + ROWNUM - 1, 'YYYY-MM-DD') AS LASTDAY
					FROM ALL_OBJECTS
					WHERE ROWNUM <= 10)
			LEFT JOIN MEMBER ON (MEMBER_JOIN_DATE=LASTDAY)
			GROUP BY LASTDAY
			ORDER BY 1 ASC
		]]>
	</select>
	
	<select id="adminPoint" parameterType="java.util.List" resultType="GraphListCount">
		<![CDATA[
			SELECT LASTDAY lastDay, NVL(SUM(ADD_POINT),0) count
			FROM (SELECT * FROM POINT WHERE POINT_LIST = '포인트 충전')
			RIGHT JOIN (SELECT TO_CHAR(TO_DATE(SYSDATE-9, 'YY-MM-DD') + ROWNUM - 1, 'YYYY-MM-DD') AS LASTDAY
			    FROM ALL_OBJECTS
			    WHERE ROWNUM <= 10) ON (POINT_DATE=LASTDAY)
			GROUP BY LASTDAY
			ORDER BY 1 ASC
		]]>
	</select>
	
	
	<select id="adminGraphCount" resultType="GraphListCount">
	 <![CDATA[
		SELECT TO_CHAR(TO_DATE(SYSDATE-9, 'YY-MM-DD') + ROWNUM - 1, 'YYYY-MM-DD') AS LASTDAY
		FROM ALL_OBJECTS
		WHERE ROWNUM <= 10
	]]>
	</select>
	
	<insert id="sanctionsInsert" parameterType="Map">
		INSERT INTO SANCTIONS
		VALUES (SEQ_SANCTIONS_NO.NEXTVAL, #{memberNo}, SYSDATE, SYSDATE+#{sanctions}, #{issue})
	</insert>
	
	<update id="mentoManage" parameterType="string">
		UPDATE MENTOR
		SET MENTOR_PASS = 'N'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<select id="selectcafeCount">
		SELECT COUNT(*)
		FROM CAFEINFO
	</select>
	
	<delete id="DeleteCafeInfo" parameterType="CafeInfo">
		DELETE FROM CAFEPRICE
		WHERE C_PRICE_NO = #{cPriceNo}
	</delete>

</mapper>
