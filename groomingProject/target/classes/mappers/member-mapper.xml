<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="memberPwd" column="MEMBER_PASSWORD"/>
		<result property="memberNickName" column="MEMBER_NICKNAME"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberGender" column="MEMBER_GENDER"/>
		<result property="memberPhone" column="MEMBER_PHONE"/>
		<result property="lvlNo" column="LVL_NO"/>
		<result property="memberExp" column="MEMBER_EXP"/>
		<result property="memberMemo" column="MEMBER_MEMO"/>
		<result property="memberPhoto" column="MEMBER_PHOTO"/>
		<result property="memberAdmin" column="MEMBER_ADMIN"/>
		<result property="memberStatus" column="MEMBER_STATUS"/>
		<result property="memberKakao" column="MEMBER_KAKAO"/>
		<result property="memberJoinDate" column="MEMBER_JOIN_DATE"/>
	</resultMap>

	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER (MEMBER_NO, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NICKNAME
			, LVL_NO, MEMBER_PHOTO, MEMBER_ADMIN, MEMBER_STATUS, MEMBER_KAKAO, MEMBER_JOIN_DATE)
		VALUES('M' || LPAD(SEQ_MEMBER_NO.NEXTVAL,5,0), #{memberEmail}, #{memberPwd}, #{memberNickName}
			, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, SYSDATE)
	</insert>
	
	<insert id="insertMemberKakao" parameterType="Member">
		INSERT INTO MEMBER (MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME
			, LVL_NO, MEMBER_PHOTO, MEMBER_ADMIN, MEMBER_STATUS, MEMBER_KAKAO, MEMBER_JOIN_DATE)
		VALUES('M' || LPAD(SEQ_MEMBER_NO.NEXTVAL,5,0), #{memberEmail}, #{memberNickName}
			, DEFAULT, DEFAULT, DEFAULT, DEFAULT, 'K', SYSDATE)
	</insert>
	
	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_EMAIL=#{memberEmail}
		AND MEMBER_STATUS='N'
	</select>

	<select id="emailDuplicateChk" parameterType="Member" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_EMAIL=#{memberEmail}
	</select>

	<select id="nickNameDuplicateChk" parameterType="Member" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NICKNAME=#{memberNickName}
	</select>

	<select id="phoneDuplicateChk" parameterType="Member" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_PHONE=#{memberPhone}
	</select>

	<update id="updateMemberOption" parameterType="Member">
		UPDATE MEMBER
		<set>
			<if test="memberName !=null">MEMBER_NAME=#{memberName},</if>
			<if test="memberGender !=null">MEMBER_GENDER=#{memberGender},</if>
			<if test="memberPhone !=null">MEMBER_PHONE=#{memberPhone},</if>
			<if test="memberMemo !=null">MEMBER_MEMO=#{memberMemo},</if>
			<if test="memberPhoto !=null">MEMBER_PHOTO=#{memberPhoto}</if>
		</set>
		WHERE MEMBER_NO=#{memberNo}
	</update>

	<select id="selectHost" parameterType="string" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER M
		JOIN GROOMING G ON M.MEMBER_NO = G.MEMBER_NO
		WHERE GROOMING_NO = #{groomingNo}
		AND MEMBER_STATUS='N'
	</select>
	
	<update id="mergeMemberTags" parameterType="MemberTag">
		MERGE INTO MEMBER_TAG M
		USING (SELECT TAG_NO FROM TAG WHERE TAG_NAME=#{tagName}) T
			ON (TRIM(M.TAG_NO)= T.TAG_NO)
		WHEN NOT MATCHED THEN
			INSERT (MEMBER_NO, TAG_NO) 
			VALUES (#{memberNo}, T.TAG_NO)
	</update>

</mapper>
